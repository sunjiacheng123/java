/*
静态代码块值初始化一次
静态-->实例-->构造方法

父类引用 子类对象-->向上转型
向上转型的三种方式：
    1.直接赋值（例如）
    2.方法传参
    3.方法返回
Anmial anmial=new Cat();
anmial.jump();//error   父类只能调用父类自己的方法和属性
运行时绑定-->多态
底层中的invokespecial：调用构造方法
invokevirtual：非静态方法，实例方法
invokestatic：静态方法

重写（覆盖）：方法名相同，参数列表相同，返回值相同  override
注意：
    1.方法不能是private的
    2.子类的方法权限一定要大于父类的方法权限
    3.重写的方法不能是静态的方法

问：重载与重写的区别？？？
问：this和super的区别？？？

发生多态：(运行时多态)
    1.继承-->父类需要引用子类对象（向上转型）
    2.通过父类的引用去调用子类和父类同名的覆盖方法

class对象在方法区

问：构造方法内是否可以发生运行时绑定？
会

向下转型前提：必须先进行向上转型

abstract：抽象方法
1.包含抽象方法的类叫做抽象类
2.抽象类不能被实例化 new
3.抽象类当中可以有抽闲方法，也可以有非抽象方法，或者是成员变量
4.抽象类的产生就是为了继承
5.抽象类只要被继承之后，就一定要重写构造方法
6.抽象类A继承抽象类B，那么抽象类A可以选择重写或者不重写抽象类B中的方法



*/

public class Text {



}
